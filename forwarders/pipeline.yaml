pipeline_name: rearset-pipeline
pipeline_description: |
  Rearset Pipeline
  This pipeline deploys the Rearset infrastructure and related resources.
  It includes a collector configuration layer, a OTLP Relay for the CloudWatch Logs transport,
  and a Kinesis Relay for the Kinesis Data Streams transport.
  It also includes an experimental Kinesis extension to send data to the Kinesis Relay.
 

pipeline_settings:
  stack_name_prefix: rearset
  output_masking:
    enabled: true
  default_sam_config:
    default:
      global:
        parameters:
          beta_features: true
      build:
        parameters:
          cached: true
          parallel: false
      deploy:
        parameters:
          capabilities: CAPABILITY_IAM
          confirm_changeset: false
          resolve_s3: true
    version: 0.1
  inputs:
    collector_extension_arn: 
      type: string
      default: ${{ env.OTEL_COLLECTOR_EXTENSION || 'arn:aws:lambda:us-east-1:902605180476:layer:ocel-arm64-minimal-forwarder-0_128_0-beta:2' }}
      
    enable_kinesis_relay:
      type: boolean
      default: true
    enable_signals_relay:
      type: boolean
      default: true

stacks:
  - id: collector
    description: "Create a collector configuration layer for the OTel Collector"
    dir: collector/

  - id: logs-relay
    description: "Processes CloudWatch Logs and relays them to the OTel Collector"
    dir: otlp-stdout-logs-processor/
    params:
      CollectorExtensionArn: ${{ inputs.collector_extension_arn }}
      CollectorConfigMapArn: ${{ stacks.collector.outputs.CollectorConfigMapArn }}
      RouteAllLogs: ${{ env.ROUTE_ALL_LOGS || "true" }}
      VpcId: ${{ env.VPC_ID }}
      SubnetIds: ${{ env.SUBNET_IDS }}
  
  - id: kinesis-relay
    if: ${{ inputs.enable_kinesis_relay }}
    description: "Processes Kinesis Data Streams and relays them to the OTel Collector"
    dir: experimental/otlp-stdout-kinesis-processor
    params:
      CollectorExtensionArn: ${{ inputs.collector_extension_arn }}
      CollectorConfigMapArn: ${{ stacks.collector.outputs.CollectorConfigMapArn }}
      VpcId: ${{ env.VPC_ID }}
      SubnetIds: ${{ env.SUBNET_IDS }}
      RouteAllLogs: ${{ env.ROUTE_ALL_LOGS || "true" }}
      KinesisStreamMode: ${{ env.KINESIS_STREAM_MODE || "PROVISIONED" }}
      ShardCount: ${{ env.KINESIS_SHARD_COUNT || "1" }}

  - id: kinesis-extension
    if: ${{ inputs.enable_kinesis_relay }}
    description: "Deploys an experimental Kinesis extension to send data to the Kinesis Relay"
    dir: experimental/otlp-stdout-kinesis-processor/extension
    params:
      KinesisStreamName: ${{ stacks.kinesis-relay.outputs.KinesisStreamName }}
    run: |
      echo "invoking example function"
      if curl -qs ${{ stacks.kinesis-extension.outputs.ExampleFunctionUrl }}
      then
        echo "\nExample function invoked successfully"
      else
        echo "\nFailed to invoke example function at ${{ stacks.kinesis-extension.outputs.ExampleFunctionUrl }}"
      fi

  - id: signals-relay
    if: ${{ inputs.enable_signals_relay }}
    description: "Processes AWS Application Signals spans and relays them to the OTel Collector"
    dir: experimental/aws-span-processor/
    params:
      CollectorExtensionArn: ${{ inputs.collector_extension_arn }}
      CollectorConfigMapArn: ${{ stacks.collector.outputs.CollectorConfigMapArn }}
      VpcId: ${{ env.VPC_ID }}
      SubnetIds: ${{ env.SUBNET_IDS }}

summary: |
  # Rearset Pipeline - Deployment Complete
  
  Your OpenTelemetry infrastructure has been successfully deployed with the following components:
  
  
  ### 1. Configure Collector Secrets
  **Critical:** Update the collector configuration secret in AWS Secrets Manager:
  
  ```bash
  aws secretsmanager update-secret \
      --secret-id ${{ stacks.collector.outputs.CollectorConfigSecretsArn }} \
      --secret-string '{
        "name": "Production OTel Collector",
        "endpoint": "https://your-otel-collector.example.com",
        "auth": "api-key=your-api-key,x-custom-header=your-value"
      }'
  ```
  
  **Alternative:** Use the [AWS Secrets Manager Console](https://console.aws.amazon.com/secretsmanager/) to update the secret manually.
  
  ### 2. Verify Network Configuration
  - **VPC ID**: `${{ env.VPC_ID || "No VPC" }}`
  - **Subnets**: `${{ env.SUBNET_IDS || "No subnets" }}`
  - **Extension Layer**: `${{ inputs.collector_extension_arn }}`
  
  ## Testing Your Deployment
  
  ### CloudWatch Logs Relay
  1. Check CloudWatch Logs for any log groups being processed
  2. Verify logs are being forwarded to your OTel Collector endpoint
  
  
  ## Important Notes
  
  - **Secrets Configuration**: The pipeline will not function until you configure the collector secrets
  - **Network Access**: Ensure your Lambda functions can reach the OTel Collector endpoint
  - **Cost Monitoring**: Monitor Kinesis and Lambda costs, especially in high-throughput scenarios
  - **Security**: Review IAM roles and VPC configurations for your security requirements
  
